// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel TilemapRender

struct Tile
{
	int Blank;
	int NumFrames;
	int AnimationFrame;
	int TileIndex;
};

RWTexture2D<float4>Result;
Texture2D<float4> TilePallet;
RWStructuredBuffer<Tile> Map;
int TileStride;
int MapHeight;
int TileDimension;
//TODO:: maybe implement some type of transparency colour

[numthreads(1,1,1)]
void TilemapRender(uint3 id : SV_DispatchThreadID)
{
	Tile T = Map[id.y * MapHeight + id.x];
	if (T.Blank == 1)
	{
		for (int x = 0; x < TileDimension; x++)
		{
			for (int y = 0; y < TileStride; y++)
			{
				uint2 TilePalletIndex = uint2(T.AnimationFrame * TileDimension + x, T.TileIndex * TileStride + y);
				uint2 RenderIndex = uint2(id.x * TileDimension + x, id.y * TileStride + y);
				Result[RenderIndex] = TilePallet[TilePalletIndex];
			}
		}
	}
}